<Window
    x:Class="Snap.Hutao.UI.Xaml.View.Window.ScriptingWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:Snap.Hutao.UI.Xaml.View.Window"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:shuxm="using:Snap.Hutao.UI.Xaml.Markup"
    xmlns:shvs="using:Snap.Hutao.ViewModel.Scripting"
    mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <!--  Title  -->
            <RowDefinition Height="auto"/>
            <!--  UserArea  -->
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid
            x:Name="DragableGrid"
            Grid.Row="0"
            Height="32">
            <TextBlock
                Margin="12,0,0,0"
                VerticalAlignment="Center"
                Style="{StaticResource CaptionTextBlockStyle}"
                Text="{shuxm:ResourceString Name=ViewWindowScriptingTitle}"/>
        </Grid>
        <Grid
            x:Name="RootGrid"
            Grid.Row="1"
            Padding="16"
            d:DataContext="{d:DesignInstance Type=shvs:ScriptingViewModel}"
            RowSpacing="16">
            <Grid.RowDefinitions>
                <!--  Input  -->
                <RowDefinition Height="auto"/>
                <!--  Command  -->
                <RowDefinition Height="auto"/>
                <!--  Result  -->
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBox
                Grid.Row="0"
                AcceptsReturn="True"
                IsSpellCheckEnabled="False"
                Text="{Binding InputScript, Mode=TwoWay}"/>
            <Grid Grid.Row="1" ColumnSpacing="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button
                    VerticalAlignment="Stretch"
                    Content="&#xE946;"
                    FontFamily="{ThemeResource SymbolThemeFontFamily}">
                    <Button.Flyout>
                        <Flyout Placement="BottomEdgeAlignedLeft" ShouldConstrainToRootBounds="False">
                            <Flyout.FlyoutPresenterStyle>
                                <Style BasedOn="{StaticResource DefaultFlyoutPresenterStyle}" TargetType="FlyoutPresenter">
                                    <Setter Property="MaxWidth" Value="1920"/>
                                </Style>
                            </Flyout.FlyoutPresenterStyle>
                            <StackPanel>
                                <TextBlock
                                    Margin="1,0,0,0"
                                    Style="{StaticResource SubtitleTextBlockStyle}"
                                    Text="Context Public Members"/>
                                <Border
                                    Margin="0,16,0,0"
                                    Padding="8"
                                    Style="{ThemeResource BorderCardStyle}">
                                    <TextBlock
                                        x:Name="TextBlock_ServiceProvider"
                                        FontFamily="Consolas"
                                        IsTextSelectionEnabled="True"/>
                                </Border>
                                <TextBlock
                                    Margin="1,2,0,0"
                                    Style="{StaticResource CaptionTextBlockStyle}"
                                    Text="Get Snap Hutao's root ServiceProvider."/>
                                <Border
                                    Margin="0,16,0,0"
                                    Padding="8"
                                    Style="{ThemeResource BorderCardStyle}">
                                    <TextBlock
                                        x:Name="TextBlock_FormatJson"
                                        FontFamily="Consolas"
                                        IsTextSelectionEnabled="True"/>
                                </Border>
                                <TextBlock
                                    Margin="1,2,0,0"
                                    Style="{StaticResource CaptionTextBlockStyle}"
                                    Text="Get a new prettified string base on the input JSON string."/>
                                <Border
                                    Margin="0,16,0,0"
                                    Padding="8"
                                    Style="{ThemeResource BorderCardStyle}">
                                    <TextBlock
                                        x:Name="TextBlock_RequestAsync"
                                        FontFamily="Consolas"
                                        IsTextSelectionEnabled="True"/>
                                </Border>
                                <TextBlock
                                    Margin="1,2,0,0"
                                    Style="{StaticResource CaptionTextBlockStyle}"
                                    Text="Asynchronously send a HTTP request with specified URL, headers and body, get the response content as string."/>
                                <TextBlock
                                    Margin="1,0,0,0"
                                    Style="{StaticResource CaptionTextBlockStyle}"
                                    Text="method: HTTP Method like &quot;GET&quot;, &quot;POST&quot;."/>
                                <TextBlock
                                    Margin="1,0,0,0"
                                    Style="{StaticResource CaptionTextBlockStyle}"
                                    Text="url: URL to send the request to."/>
                                <TextBlock
                                    Margin="1,0,0,0"
                                    Style="{StaticResource CaptionTextBlockStyle}"
                                    Text="headers: String array of headers, every header can have value or not, for example: [&quot;x-my-header&quot;, &quot;x-my-header: value&quot;]"/>
                                <TextBlock
                                    Margin="1,0,0,0"
                                    Style="{StaticResource CaptionTextBlockStyle}"
                                    Text="body: HTTP request body to send"/>
                                <Border
                                    Margin="0,16,0,0"
                                    Padding="8"
                                    Style="{ThemeResource BorderCardStyle}">
                                    <TextBlock
                                        x:Name="TextBlock_RequestWithCurrentUserAndUidAsync"
                                        FontFamily="Consolas"
                                        IsTextSelectionEnabled="True"/>
                                </Border>
                                <TextBlock
                                    Margin="1,2,0,0"
                                    Style="{StaticResource CaptionTextBlockStyle}"
                                    Text="Similar to RequestAsync, but add current selected user and uid as Cookies."/>
                                <TextBlock
                                    Margin="1,0,0,0"
                                    Style="{StaticResource CaptionTextBlockStyle}"
                                    Text="ds: Data signing handler hint, pattern: 'GEN|SALT|CHAR' , for example: &quot;Gen2|X4|false&quot;"/>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>
                <Button
                    Grid.Column="1"
                    HorizontalAlignment="Stretch"
                    Command="{Binding ExecuteScriptCommand}"
                    Content="{shuxm:ResourceString Name=ViewWindowScriptingExecute}"/>
            </Grid>

            <Border Grid.Row="2" Style="{ThemeResource BorderCardStyle}">
                <ScrollViewer>
                    <TextBlock
                        Margin="8"
                        IsTextSelectionEnabled="True"
                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                        Text="{Binding OutputResult, Mode=OneWay}"/>
                </ScrollViewer>
            </Border>
        </Grid>
    </Grid>
</Window>
