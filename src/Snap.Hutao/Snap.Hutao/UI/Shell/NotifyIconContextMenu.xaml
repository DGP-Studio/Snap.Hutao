<Flyout
    x:Class="Snap.Hutao.UI.Shell.NotifyIconContextMenu"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cw="using:CommunityToolkit.WinUI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:shuxm="using:Snap.Hutao.UI.Xaml.Markup"
    xmlns:shuxmb="using:Snap.Hutao.UI.Xaml.Media.Backdrop"
    xmlns:shv="using:Snap.Hutao.ViewModel"
    ShouldConstrainToRootBounds="False"
    mc:Ignorable="d">

    <Flyout.SystemBackdrop>
        <shuxmb:InputActiveDesktopAcrylicBackdrop/>
    </Flyout.SystemBackdrop>

    <Flyout.FlyoutPresenterStyle>
        <Style BasedOn="{StaticResource DefaultFlyoutPresenterStyle}" TargetType="FlyoutPresenter">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
    </Flyout.FlyoutPresenterStyle>

    <Grid
        x:Name="Root"
        d:DataContext="{d:DesignInstance shv:NotifyIconViewModel}"
        Background="Transparent">
        <Grid.Resources>
            <Style x:Key="NotifyIconContextMenuFlyoutItemStyle" TargetType="MenuFlyoutItem">
                <Setter Property="Background" Value="{ThemeResource MenuFlyoutItemBackground}"/>
                <Setter Property="BorderBrush" Value="{ThemeResource MenuFlyoutItemBackgroundBrush}"/>
                <Setter Property="BorderThickness" Value="{ThemeResource MenuFlyoutItemBorderThickness}"/>
                <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}"/>
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                <Setter Property="Foreground" Value="{ThemeResource MenuFlyoutItemForeground}"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="KeyboardAcceleratorPlacementMode" Value="Hidden"/>
                <Setter Property="Padding" Value="{StaticResource MenuFlyoutItemThemePadding}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="MenuFlyoutItem">
                            <Grid
                                x:Name="LayoutRoot"
                                Margin="{StaticResource MenuFlyoutItemMargin}"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Viewbox
                                    x:Name="IconRoot"
                                    Width="16"
                                    Height="16"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center">
                                    <ContentPresenter x:Name="IconContent" Content="{TemplateBinding Icon}"/>
                                </Viewbox>
                                <TextBlock
                                    x:Name="TextBlock"
                                    Grid.Column="1"
                                    Margin="8,0,0,0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Text}"
                                    TextTrimming="{ThemeResource MenuFlyoutItemTextTrimming}"/>
                                <TextBlock
                                    x:Name="KeyboardAcceleratorTextBlock"
                                    Grid.Column="2"
                                    MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KeyboardAcceleratorTextMinWidth}"
                                    Margin="24,4,0,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    AutomationProperties.AccessibilityView="Raw"
                                    Foreground="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForeground}"
                                    Style="{ThemeResource CaptionTextBlockStyle}"
                                    Text="{TemplateBinding KeyboardAcceleratorTextOverride}"
                                    TextAlignment="Right"
                                    Visibility="Collapsed"/>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>

                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.Background" Value="{ThemeResource MenuFlyoutItemBackgroundPointerOver}"/>
                                                <Setter Target="TextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPointerOver}"/>
                                                <Setter Target="IconContent.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPointerOver}"/>
                                                <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPointerOver}"/>

                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.Background" Value="{ThemeResource MenuFlyoutItemBackgroundPressed}"/>
                                                <Setter Target="TextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPressed}"/>
                                                <Setter Target="IconContent.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPressed}"/>
                                                <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPressed}"/>

                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.Background" Value="{ThemeResource MenuFlyoutItemBackgroundDisabled}"/>
                                                <Setter Target="TextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundDisabled}"/>
                                                <Setter Target="IconContent.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundDisabled}"/>
                                                <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForegroundDisabled}"/>

                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckPlaceholderStates">
                                        <VisualState x:Name="NoPlaceholder"/>
                                        <VisualState x:Name="CheckPlaceholder">
                                            <VisualState.Setters>
                                                <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}"/>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="IconPlaceholder">
                                            <VisualState.Setters>
                                                <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}"/>
                                                <Setter Target="IconRoot.Visibility" Value="Visible"/>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckAndIconPlaceholder">
                                            <VisualState.Setters>
                                                <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemDoublePlaceholderThemeThickness}"/>
                                                <Setter Target="IconRoot.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}"/>
                                                <Setter Target="IconRoot.Visibility" Value="Visible"/>

                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>
                                    <!--  Narrow padding is only applied when flyout was invoked with pen, mouse or keyboard.  -->
                                    <!--  Default padding is applied for all other cases including touch.  -->
                                    <VisualStateGroup x:Name="PaddingSizeStates">
                                        <VisualState x:Name="DefaultPadding"/>
                                        <VisualState x:Name="NarrowPadding">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Padding">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MenuFlyoutItemThemePaddingNarrow}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                                        <VisualState x:Name="KeyboardAcceleratorTextCollapsed"/>
                                        <VisualState x:Name="KeyboardAcceleratorTextVisible">
                                            <VisualState.Setters>
                                                <Setter Target="KeyboardAcceleratorTextBlock.Visibility" Value="Visible"/>

                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Background="{ThemeResource CardBackgroundFillColorSecondaryBrush}">
            <TextBlock
                Margin="8"
                Style="{StaticResource BodyTextBlockStyle}"
                Text="{Binding Title}"/>
        </Grid>

        <StackPanel Grid.Row="1" Padding="0,2">
            <MenuFlyoutItem
                Command="{Binding OpenScriptingWindowCommand}"
                Icon="{shuxm:FontIcon Glyph=&#xE768;}"
                Style="{ThemeResource NotifyIconContextMenuFlyoutItemStyle}"
                Text="{shuxm:ResourceString Name=ViewWindowScriptingTitle}"/>
            <MenuFlyoutItem
                Command="{Binding RestartAsElevatedCommand}"
                Icon="{shuxm:FontIcon Glyph=&#xE7EF;}"
                IsEnabled="{Binding RuntimeOptions.IsElevated, Converter={StaticResource BoolNegationConverter}}"
                Style="{ThemeResource NotifyIconContextMenuFlyoutItemStyle}"
                Text="{shuxm:ResourceString Name=ViewPageSettingElevatedModeRestartAction}"/>
        </StackPanel>

        <Grid Grid.Row="2" Background="{ThemeResource CardBackgroundFillColorSecondaryBrush}">
            <StackPanel
                Margin="4,0"
                HorizontalAlignment="Right"
                Orientation="Horizontal"
                Spacing="2">
                <AppBarButton Command="{Binding ShowWindowCommand}" Label="{shuxm:ResourceString Name=CoreWindowingNotifyIconViewLabel}">
                    <AppBarButton.Icon>
                        <FontIcon
                            Width="20"
                            Height="20"
                            Glyph="&#xE80F;"/>
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton Command="{Binding LaunchGameCommand}" Label="{shuxm:ResourceString Name=CoreWindowingNotifyIconLaunchGameLabel}">
                    <AppBarButton.Icon>
                        <FontIcon
                            Width="20"
                            Height="20"
                            Glyph="&#xE7FC;"/>
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton Command="{Binding ExitCommand}" Label="{shuxm:ResourceString Name=CoreWindowingNotifyIconExitLabel}">
                    <AppBarButton.Icon>
                        <FontIcon
                            Width="20"
                            Height="20"
                            Glyph="&#xE7E8;"/>
                    </AppBarButton.Icon>
                </AppBarButton>
            </StackPanel>
        </Grid>
    </Grid>
</Flyout>
